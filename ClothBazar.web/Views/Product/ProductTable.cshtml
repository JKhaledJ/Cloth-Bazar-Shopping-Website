@model ClothBazar.web.ViewModels.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}

@*<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>*@

<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Products
            </h2>
        </div><!-- /.title-section -->
    </div><!-- /.col-md-12 -->
</div>
<div>
    <form method="post">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <h2>Search Here</h2>
                    <input class="form-control" name="Search" id="searchTxt" placeholder="Search..." value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <br />
                    <button type="button" id="searchBtn">Search</button>
                    <button type="button" id="newBtn">New</button>
                </div>
            </div>
        </div>
    </form>
</div>

<h2>ProductTable</h2>

<table id="myProductsTable" class="table table-striped">
    <thead>
        <tr>
            <td>Product Name</td>
            <td>Category</td>
            <td>Price</td>
            <td>Actions</td>
        </tr>
    </thead>
    <tbody>
        @if (Model.Products != null && Model.Products.Count > 0)
        {
            foreach (var products in Model.Products)
            {
                <tr>
                    
                    <td><input type="hidden" value="@products.ID" />
                     @products.Name</td>
                    <td>

                        @if (products.category != null)
                        {
                            <text>@products.category.Name</text>
                        }
                        else
                        {
                            <text>#</text>
                        }
                    </td>
                    <td>@products.Price</td>
                    <td>
                        <button class="editBtn" dataId="@products.ID">Edit</button>
                        <button class="deleteBtn" dataId="@products.ID">Delete</button>
                        <button class="addToCart" dataId="@products.ID">Add to Cart</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td class="text-danger" colspan="4">No products found.</td>
            </tr>
        }

    </tbody>
</table>
<div>
    @if (Model.Pager != null)
    {
        if (Model.Pager.CurrentPage > 1)
        {
            <button class="NextPrevButtons" dataPageNo="1">First</button>
            <button class="NextPrevButtons" dataPageNo="@(Model.Pager.CurrentPage-1)">Previous</button>
        }

        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            string activeClass = Model.Pager.CurrentPage == page ? "bg-info" : string.Empty;
            <button class="@activeClass NextPrevButtons" dataPageNo="@page">@page</button>
        }
        if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <button class="NextPrevButtons" dataPageNo="@(Model.Pager.CurrentPage+1)">Next</button>
            <button class="NextPrevButtons" dataPageNo="@Model.Pager.EndPage">Last</button>
        }

    }

</div>

<script>
    $(".NextPrevButtons").click(function () {
        $.ajax({
            url: '/product/ProductTable',
            data: {
                pageNo: $(this).attr("dataPageNo")
            }

        }).done(function (response) {
            $("#productCnt").html(response);

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fails");
        })
    })

    //This is for pagenation instead the above codes we can simply write this.
    //$('#myProductsTable').DataTable();

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            type: "Get",
            url: '/product/ProductTable',
            data: {
                search: searchValue
            }
        }).done(function (response) {
            $("#productCnt").html(response);

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fails");
        })
    })

    $("#newBtn").click(function () {
        $.ajax({
            type: "Get",
            url: '/product/Create'
        }).done(function (response) {
            $("#actionContainer").html(response);
            //$("#actionContainer").attr("class", "col-md-4");
            //$("#productCnt").attr("class", "col-md-8");
            //$("#myProductsTable").attr("class", "col-md-3");
            focus();
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fails");
        })
    })

    $(".editBtn").click(function () {
        var id = $("#id").val();
        $.ajax({
            type: "Get",
            url: '/product/Edit',
            data: {
                id: $(this).attr('dataId')
            }
        }).done(function (response) {
            $("#actionContainer").html(response);

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fails");
        })
    })

    $(".deleteBtn").click(function () {
        swal({
            title: "Confirm?",
            text: "Are you sure to delete this?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: 'POST',
                        url: '/product/Delete',
                        data: {
                            id: $(this).attr('dataId')
                        }
                    }).done(function (response) {
                        $("#productCnt").html(response);
                        swal("Record has been deleted!", {
                            icon: "success",
                        });

                    }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Fails");
                    })
                }
            });


    })

    var products = [];
    $(".addToCart").click(function () {
        var CartProducts = $(this).attr('dataId');
        products.push(CartProducts);
        $.cookie('productCookie', products.join('-'));
        alert("Product is added successfully");
    })

    function focus() {
        $('html, body').animate({ scrollTop: $('#actionContainer').offset().top }, 'slow');
    }
</script>
