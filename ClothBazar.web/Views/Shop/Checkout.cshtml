@model ClothBazar.web.ViewModels.CheckOutViewModel
@{
    ViewBag.Title = "Checkout";
}

<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Checkout
            </h2>
        </div><!-- /.title-section -->
    </div><!-- /.col-md-12 -->
</div>

@if (Model != null && Model.CartProducts != null && Model.CartProducts.Count > 0)
{
    var i = 1;
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                        <span class="badge badge-danger badge-pill">@Model.CartProducts.Count</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var product in Model.CartProducts)
                        {
                            var totalEach = Model.CartProductIDs.Where(prID => prID == product.ID).Count();
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div>
                                    <h6 class="my-0">@i - @product.Name <span class="badge badge-success badge-pill">@totalEach</span></h6>
                                    <small class="text-muted">@(product.Description.Length>100?product.Description.Substring(0,99):product.Description)</small>
                                </div>
                                <span class="text-muted">Unit: $@product.Price - Total:$ @(product.Price* totalEach) </span>
                            </li>
                            i++;
                        }

                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <strong>$ @Model.CartProducts.Sum(x => x.Price * Model.CartProductIDs.Where(pID => pID == x.ID).Count())</strong>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="Name">Name</label>
                                <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.FirstName" required="">
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted">(Optional)</span></label>
                            <input type="email" class="form-control" id="Email" value="@Model.User.Email">
                        </div>

                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="Address" value="@Model.User.Country">
                        </div>

                        <hr class="mb-4">
                        <button id="placeOrderBtn" class="btn btn-success btn-md" type="button">Place Order!</button>
                    </form>
                </div>
            </div>
        </div>
    </section>
    <script>
    $("#placeOrderBtn").click(function () {
        debugger;
        $.ajax({
            url: '/Shop/PlaceOrder',
            data: {
                ProductsIDs: '@string.Join("-", Model.CartProductIDs)'
            }

        }).done(function (response) {
            if (response.Success) {
                $.cookie('productCookie', '', { path: '/' });
                updateCartProducts(); //TO update cart value.
                swal("Done", "Your order placed successfully", "success").then(() => {
                    window.location = '@Url.Action("Index","Shop")';
                });

            }
            else {
                swal("Failed", "Unable to place the order.", "warning");
            }

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fails");
        })
    })

    </script>
}
else
{
    <div class="wrap-error text-center">
        <div class="content-error">
            <h2>Oops, Product Not Found!</h2>
            <p>It looks like nothing was added to your cart. Click <a href="@Url.Action("Index","Shop")" class="btn-error">here</a> to return Shop Page</p>
        </div>
    </div>
}


